
Gprof Flat Profile
 69.76      1.68     1.68        1     1.68     1.68  sort_words
 28.65      2.37     0.69   214364     0.00     0.00  find_ele_rec
  0.83      2.39     0.02   114421     0.00     0.00  save_string

for (i = 0; i < tsize; i++)
	for (ele = htable[i]; ele; ele = ele->next) {
	    if (ele->freq == 1)
		scnt++;
	    if (quick)
		array[cnt] = ele;
	    else {
		for (j = cnt; j > 0 && ele->freq > array[j-1]->freq; j--)
		    array[j] = array[j-1];
		array[j] = ele;
	    }
	    cnt++;
	}

The function that the default version of the dictionary spends the most time on is the sort_words function. This function has to do a sorting algorithmn so it takes a lot of processing time if the sorting method is inefficient. When it is using quicksort it will go a lot faster.



